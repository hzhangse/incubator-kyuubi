kubectl create configmap core-site.xml --from-file=./image/core-site.xml -n kyuubi

kubectl create configmap hive-schema-2.3.0.postgres.sql  --from-file=./image/hive-schema-2.3.0.postgres.sql -n kyuubi

kubectl create configmap hive-site.xml --from-file=./image/hive-site.xml -n kyuubi

kubectl create configmap hive-txn-schema-2.3.0.postgres.sql  --from-file=./image/hive-txn-schema-2.3.0.postgres.sql -n kyuubi

kubectl create configmap kyuubi-defaults.conf --from-file=./image/kyuubi-defaults.conf -n kyuubi

kubectl create configmap kyuubi-log4j2.xml --from-file=./image/kyuubi-log4j2.xml -n kyuubi

kubectl create configmap load-dataset-tpch-tiny.sql --from-file=./image/load-dataset-tpch-tiny.sql -n kyuubi

kubectl create configmap load-dataset-tpcds-tiny.sql --from-file=./image/load-dataset-tpcds-tiny.sql -n kyuubi

kubectl create configmap spark-defaults.conf --from-file=./image/spark-defaults.conf -n kyuubi


kubectl create serviceaccount spark -n kyuubi

kubectl create clusterrolebinding spark-role --clusterrole=edit --serviceaccount=kyuubi:spark --namespace=kyuubi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: 
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: longhorn
  volumeMode: Filesystem
 
 ---
  
 ./bin/alluxio  fs mount --shared /spark s3a://spark-bucket/warehouse \
  --option alluxio.underfs.s3.disable.dns.buckets=true \
  --option alluxio.underfs.s3.endpoint=http://minio:9000 \
  --option alluxio.underfs.s3.inherit.acl=false \
  --option aws.accessKeyId=minio \
  --option aws.secretKey=minio_minio 
